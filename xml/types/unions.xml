<module name="Test">
  
  <union name="union_primitives_final" extensibility="final" >
    <discriminator type="byte"/>
    <case><caseDiscriminator value="0x01"/><member name="x1"  type="byte"    /></case>
    <case><caseDiscriminator value="0x02"/><member name="x2"  type="uint16"  /></case>
    <case><caseDiscriminator value="0x03"/><member name="x3"  type="uint32"  /></case>
    <case><caseDiscriminator value="0x04"/><member name="x4"  type="uint64"  /></case>
    <case><caseDiscriminator value="0x05"/><member name="x5"  type="char8"   /></case>
    <case><caseDiscriminator value="0x06"/><member name="x6"  type="int16"   /></case>
    <case><caseDiscriminator value="0x07"/><member name="x7"  type="int32"   /></case>
    <case><caseDiscriminator value="0x08"/><member name="x8"  type="int64"   /></case>
    <case><caseDiscriminator value="0x09"/><member name="x9"  type="boolean" /></case>
    <case><caseDiscriminator value="0x0a"/><member name="x10" type="float32" /></case>
    <case><caseDiscriminator value="0x0b"/><member name="x11" type="float64" /></case>
    <case><caseDiscriminator value="0x0c"/><member name="x12" type="float64" /></case>
  </union>

  <union name="union_primitives_appendable" extensibility="appendable" >
    <discriminator type="byte"/>
    <case><caseDiscriminator value="0x01"/><member name="x1"  type="byte"    /></case>
    <case><caseDiscriminator value="0x02"/><member name="x2"  type="uint16"  /></case>
    <case><caseDiscriminator value="0x03"/><member name="x3"  type="uint32"  /></case>
    <case><caseDiscriminator value="0x04"/><member name="x4"  type="uint64"  /></case>
    <case><caseDiscriminator value="0x05"/><member name="x5"  type="char8"   /></case>
    <case><caseDiscriminator value="0x06"/><member name="x6"  type="int16"   /></case>
    <case><caseDiscriminator value="0x07"/><member name="x7"  type="int32"   /></case>
    <case><caseDiscriminator value="0x08"/><member name="x8"  type="int64"   /></case>
    <case><caseDiscriminator value="0x09"/><member name="x9"  type="boolean" /></case>
    <case><caseDiscriminator value="0x0a"/><member name="x10" type="float32" /></case>
    <case><caseDiscriminator value="0x0b"/><member name="x11" type="float64" /></case>
    <case><caseDiscriminator value="0x0c"/><member name="x12" type="float64" /></case>
  </union>
  
  <union name="union_primitives_mutable" extensibility="mutable" >
    <discriminator type="byte"/>
    <case><caseDiscriminator value="0x01"/><member name="x1"  type="byte"    /></case>
    <case><caseDiscriminator value="0x02"/><member name="x2"  type="uint16"  /></case>
    <case><caseDiscriminator value="0x03"/><member name="x3"  type="uint32"  /></case>
    <case><caseDiscriminator value="0x04"/><member name="x4"  type="uint64"  /></case>
    <case><caseDiscriminator value="0x05"/><member name="x5"  type="char8"   /></case>
    <case><caseDiscriminator value="0x06"/><member name="x6"  type="int16"   /></case>
    <case><caseDiscriminator value="0x07"/><member name="x7"  type="int32"   /></case>
    <case><caseDiscriminator value="0x08"/><member name="x8"  type="int64"   /></case>
    <case><caseDiscriminator value="0x09"/><member name="x9"  type="boolean" /></case>
    <case><caseDiscriminator value="0x0a"/><member name="x10" type="float32" /></case>
    <case><caseDiscriminator value="0x0b"/><member name="x11" type="float64" /></case>
    <case><caseDiscriminator value="0x0c"/><member name="x12" type="float64" /></case>
  </union>



  <!-- discriminator assignability -->
  <union name="union_uint32" ><discriminator type="uint32" />
    <case><caseDiscriminator value="2"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="1"/><member name="x2" type="int32"/></case>
  </union>

  <bitmask name="B_16" bitBound="16">
    <flag name="B_FLAG_1" value="0"/>
    <flag name="B_FLAG_2" value="1"/>
  </bitmask>

  <bitmask name="B_32" bitBound="32">
    <flag name="B_FLAG_1" value="0"/>
    <flag name="B_FLAG_2" value="1"/>
    <flag name="B_FLAG_3" value="2"/>
  </bitmask>
  
  <union name="union_bitmask16" ><discriminator type="nonBasic" nonBasicTypeName="B_16"/>
    <case><caseDiscriminator value="2"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="1"/><member name="x2" type="int32"/></case>
  </union>
  
  <union name="union_bitmask32" ><discriminator type="nonBasic" nonBasicTypeName="B_32"/>
    <case><caseDiscriminator value="2"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="1"/><member name="x2" type="int32"/></case>
  </union>
  
  <!-- discriminator key vs not -->
  <union name="union_uint32_key" ><discriminator type="uint32" key="true" />
    <case><caseDiscriminator value="2"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="1"/><member name="x2" type="int32"/></case>
  </union>

  <!-- sames names / different ids -->
  <union name="union_1" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case>
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>

  <union name="union_2" ><discriminator type="uint32" />
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case>
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>
  
  <!-- sames ids / different names -->
  <union name="union_3" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case>
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>

  <union name="union_4" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x2" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x1" type="int32"/></case>
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>

  <!-- label in one selects assignable member from other -->
  <union name="union_int16"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int16"/></case> <!-- different --> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>

  <union name="union_int32"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case> <!-- different --> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>

  <union name="union_int32_default"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="default"/><member name="x2" type="int32"/></case> <!-- different --> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>

  <union name="union_int16_default"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="default"/><member name="x2" type="int16"/></case> <!-- different --> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int32"/></case>
  </union>

  
  <union name="union_final_5"  extensibility="final" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int64"/></case>
    <case><caseDiscriminator value="4"/><member name="x4" type="uint16"/></case>
    <case><caseDiscriminator value="5"/><member name="x5" type="uint32"/></case>
  </union>

  <union name="union_final_5_default"  extensibility="final" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int64"/></case>
    <case><caseDiscriminator value="4"/><member name="x4" type="uint16"/></case>
    <case><caseDiscriminator value="5"/><member name="x5" type="uint32"/></case>
    <case><caseDiscriminator value="default"/><member name="DeFault" type="uint32"/></case>
  </union>

  <union name="union_final_6"  extensibility="final" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int64"/></case>
    <case><caseDiscriminator value="4"/><member name="x4" type="uint16"/></case>
    <case><caseDiscriminator value="5"/><member name="x5" type="uint32"/></case>
    <case><caseDiscriminator value="0"/><member name="x0" type="uint64"/></case>
  </union>
  
  <union name="union_appendable_a"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int64"/></case>
    <case><caseDiscriminator value="4"/><member name="x4" type="uint16"/></case>
    <case><caseDiscriminator value="5"/><member name="x5" type="uint32"/></case>
  </union>

  <union name="union_appendable_b"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="11"/><member name="x11" type="int16"/></case>
    <case><caseDiscriminator value="12"/><member name="x12" type="int32"/></case> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int64"/></case>
    <case><caseDiscriminator value="14"/><member name="x14" type="uint16"/></case>
    <case><caseDiscriminator value="15"/><member name="x15" type="uint32"/></case>
    <case><caseDiscriminator value="10"/><member name="x10" type="uint64"/></case>
  </union>
  
  <union name="union_appendable_c"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="11"/><member name="x11" type="int16"/></case>
    <case><caseDiscriminator value="12"/><member name="x12" type="int32"/></case> 
    <case><caseDiscriminator value="13"/><member name="x13" type="int64"/></case>
    <case><caseDiscriminator value="14"/><member name="x14" type="uint16"/></case>
    <case><caseDiscriminator value="15"/><member name="x15" type="uint32"/></case>
    <case><caseDiscriminator value="10"/><member name="x10" type="uint64"/></case>
  </union>
  
  <union name="union_appendable_a_default"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="5"/><member name="x5" type="uint32"/></case>
    <case><caseDiscriminator value="default"/><member name="xd" type="uint32"/></case>
  </union>
  <union name="union_appendable_b_default"  extensibility="appendable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="15"/><member name="x15" type="uint32"/></case>
    <case><caseDiscriminator value="default"/><member name="xd" type="uint32"/></case>
  </union>
  
  
  <union name="union_mutable_a"  extensibility="mutable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="1"/><member name="x1" type="int16"/></case>
    <case><caseDiscriminator value="2"/><member name="x2" type="int32"/></case> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int64"/></case>
    <case><caseDiscriminator value="4"/><member name="x4" type="uint16"/></case>
    <case><caseDiscriminator value="5"/><member name="x5" type="uint32"/></case>
  </union>

  <union name="union_mutable_b"  extensibility="mutable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="11"/><member name="x11" type="int16"/></case>
    <case><caseDiscriminator value="12"/><member name="x12" type="int32"/></case> 
    <case><caseDiscriminator value="3"/><member name="x3" type="int64"/></case>
    <case><caseDiscriminator value="14"/><member name="x14" type="uint16"/></case>
    <case><caseDiscriminator value="15"/><member name="x15" type="uint32"/></case>
    <case><caseDiscriminator value="10"/><member name="x10" type="uint64"/></case>
  </union>
  
  <union name="union_mutable_c"  extensibility="mutable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="11"/><member name="x11" type="int16"/></case>
    <case><caseDiscriminator value="12"/><member name="x12" type="int32"/></case> 
    <case><caseDiscriminator value="13"/><member name="x13" type="int64"/></case>
    <case><caseDiscriminator value="14"/><member name="x14" type="uint16"/></case>
    <case><caseDiscriminator value="15"/><member name="x15" type="uint32"/></case>
    <case><caseDiscriminator value="10"/><member name="x10" type="uint64"/></case>
  </union>
  
  
  <union name="union_mutable_a_default"  extensibility="mutable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="5"/><member name="x5" type="uint32"/></case>
    <case><caseDiscriminator value="default"/><member name="xd" type="uint32"/></case>
  </union>
  <union name="union_mutable_b_default"  extensibility="mutable" ><discriminator type="uint32" />
    <case><caseDiscriminator value="15"/><member name="x15" type="uint32"/></case>
    <case><caseDiscriminator value="default"/><member name="xd" type="uint32"/></case>
  </union>
  
  
  
</module>

