<module name="Test">

  <enum name="E1" bitBound="32" extensibility="appendable">
    <enumerator name="VAL0" value="0"/>
    <enumerator name="VAL1" value="1"/>
    <enumerator name="VAL2" value="2"/>
  </enum>
  
  <enum name="E2" bitBound="32" extensibility="appendable">
    <enumerator name="VAL0" value="0"/>
    <enumerator name="VAL1" value="1"/>
    <enumerator name="VAL2" value="2"/>
    <enumerator name="VAL3" value="3"/> 
  </enum>

  
  <struct name="int32x10"   extensibility="final">
    <member name="x1"   type="int32" arrayDimensions="10"  /> 
  </struct>

  <struct name="int32x10x2"   extensibility="final">
    <member name="x1"   type="int32" arrayDimensions="10,2"  /> 
  </struct>

  <struct name="int32x20"   extensibility="final">
    <member name="x1"   type="int32" arrayDimensions="20"  /> 
  </struct>
  
  <struct name="uint32x10"   extensibility="final">
    <member name="x1"   type="uint32" arrayDimensions="10"  /> 
  </struct>

  <struct name="uint32x20"   extensibility="final">
    <member name="x1"   type="uint32" arrayDimensions="20"  /> 
  </struct>


  <!-- arrays of string types -->
  <struct name="string10x10"   extensibility="final">
    <member name="x1"   type="string" stringMaxLength="10" arrayDimensions="10"  /> 
  </struct>
  <struct name="string20x10"   extensibility="final">
    <member name="x1"   type="string" stringMaxLength="20" arrayDimensions="10"  /> 
  </struct>

  <!-- arrays of enum types -->
  <struct name="enum1"   extensibility="final">
    <member name="x1"   type="nonBasic" nonBasicTypeName="E1"   /> 
  </struct>
  <struct name="enum2"   extensibility="final">
    <member name="x1"   type="nonBasic" nonBasicTypeName="E2"  /> 
  </struct>
  
  <struct name="enum1x10"   extensibility="final">
    <member name="x1"   type="nonBasic" nonBasicTypeName="E1" arrayDimensions="10"  /> 
  </struct>
  <struct name="enum2x10"   extensibility="final">
    <member name="x1"   type="nonBasic" nonBasicTypeName="E2" arrayDimensions="10"  /> 
  </struct>
  
  

  
  <!-- check 'strongly assignable' element type -->
  <struct name="S_final"   extensibility="final">
    <member name="x1"   type="uint32" arrayDimensions="20"  /> 
  </struct>
  <struct name="S_final_alt"   extensibility="final">
    <member name="x1"   type="uint32" arrayDimensions="20"  /> 
  </struct>

  <struct name="S_appendable"   extensibility="appendable">
    <member name="x1"   type="uint32" arrayDimensions="20"  /> 
  </struct>
  <struct name="S_appendable_alt"   extensibility="appendable">
    <member name="x1"   type="uint32" arrayDimensions="20"  /> 
  </struct>

  <struct name="S_mutable"   extensibility="mutable">
    <member name="x1"   type="uint32" arrayDimensions="20"  /> 
  </struct>

  <struct name="sfinalx10"   extensibility="final">
    <member name="x1"   type="nonBasic" nonBasicTypeName="S_final" arrayDimensions="10"  /> 
  </struct>
  <struct name="sfinalx10_alt"   extensibility="final">
    <member name="altx1"   type="nonBasic" nonBasicTypeName="S_final_alt" arrayDimensions="10"  /> 
  </struct>

  <struct name="sappendablex10"   extensibility="final">
    <member name="x1"   type="nonBasic" nonBasicTypeName="S_appendable" arrayDimensions="10"  /> 
  </struct>
  <struct name="sappendablex10_alt"   extensibility="final">
    <member name="altx1"   type="nonBasic" nonBasicTypeName="S_appendable_alt" arrayDimensions="10"  /> 
  </struct>

  
</module>
